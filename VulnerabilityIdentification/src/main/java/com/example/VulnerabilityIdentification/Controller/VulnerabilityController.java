//package com.example.VulnerabilityIdentification.Controller;
//
//
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.http.ResponseEntity;
//import org.springframework.web.bind.annotation.*;
//import org.springframework.web.multipart.MultipartFile;
//
//import com.example.VulnerabilityIdentification.Service.PracticeCheckerService;
//
//import java.io.IOException;
//import java.util.List;
//import java.util.Map;
//
//@RestController
//@RequestMapping("/api/v1/vulnerability")
//public class VulnerabilityController {
//
//    @Autowired
//    private PracticeCheckerService practiceCheckerService;
//
//    @PostMapping("/check")
//    public ResponseEntity<?> checkPractices(
//            @RequestParam("file") MultipartFile file,
//            @RequestParam("practices") List<String> practices) {
//        try {
//            Map<String, List<String>> result = practiceCheckerService.checkPractices(file, practices);
//            return ResponseEntity.ok(result);
//        } catch (IOException e) {
//            return ResponseEntity.status(500).body("Error processing file: " + e.getMessage());
//        }
//    }
//}









package com.example.VulnerabilityIdentification.Controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import com.example.VulnerabilityIdentification.Service.PracticeCheckerService;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;

import java.io.IOException;
import java.util.List;
import java.util.Map;

@RestController
@RequestMapping("/api/v1/vulnerability")
public class VulnerabilityController {

    @Autowired
    private PracticeCheckerService practiceCheckerService;

    @PostMapping("/check")
    public ResponseEntity<?> checkPractices(
            @RequestParam("file") MultipartFile file,
            @RequestParam("practices") String practicesJson) {
        try {
            // Convert practices JSON to a list of strings
            ObjectMapper objectMapper = new ObjectMapper();
            List<String> practices = objectMapper.readValue(practicesJson, new TypeReference<List<String>>() {});

            // Check practices using the service
            Map<String, List<String>> result = practiceCheckerService.checkPractices(file, practices);
            return ResponseEntity.ok(result);
        } catch (IOException e) {
            e.printStackTrace();
            return ResponseEntity.status(500).body("Error processing file: " + e.getMessage());
        } catch (Exception e) {
            e.printStackTrace();
            return ResponseEntity.status(500).body("An unexpected error occurred: " + e.getMessage());
        }
    }
}

